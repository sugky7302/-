import 模板


class EffectManager:
    private:
        static _templates_ <- an empty array from 0
        _list_ <- an empty dict
        
    public:
        func __ctr__()
            _list_ <- an empty dict
        end func

        func add(data)
            for t (_templates_) do
                if t["name"] == data.name then
                    instance <- Effect(t)
                    break
                end if
            end for

            if 沒有instance then
                return nil
            end if

            for k, v (data) do
                instance[k] = v
            end for

            if not instance._list_[data.name] then
                instance._list_[data.name] <- an empty list from 0
            end if
            
            instance.getTemplates = getTemplates

            return instance
        end func

        func find()
        end func

        func delete()
        end func
end class

class Effect
    private:
        func _addModel()
            if _model_存在 then
                添加特效
            end if
        end func

        func _removeModel()
            if _model_存在 then
                刪除特效
            end if
        end func

        func _setMode()
        end func

        func _startTimer()
        end func

    public:
        func __ctr__(template)
            instance <- 複製一份template的副本
            設定instance為Effect實例
            return instance
        end func

        func start()
            設定模式
            調用添加事件
            添加特效
            設定時間並啟動計時器
        end func

        func delete()
            關閉計時器
            調用刪除事件
            刪除Effect
            刪除特效
        end func

         只有在計時器裡會用到
        func finish()
            調用完成事件
            刪除Effect
            刪除特效
        end func

        func pause()
            暫停計時器
            調用刪除事件
            暫停Effect
            刪除特效
        end func

        func resume()
            調用添加事件
            添加特效
            恢復計時器
        end func       
end class
